--Dropping if exists and Creating table for bronze_crm_cust_info
DROP TABLE IF EXISTS bronze_crm_cust_info;
CREATE TABLE bronze_crm_cust_info (
	cst_id INT,
	cst_key VARCHAR (50),
	cst_firstname VARCHAR (50),
	cst_lastname VARCHAR (50),
	cst_marital_status VARCHAR (50),
	cst_gndr VARCHAR (50),
	cst_create_date DATE
);

-- Dropping if exists and Creating table for bronze_crm_prd_info
DROP TABLE IF EXISTS bronze_crm_prd_info; 
CREATE TABLE bronze_crm_prd_info (
	prd_id INT,
	prd_key VARCHAR (50),
	prd_nm VARCHAR (50),
	prd_cost INT,
	prd_line VARCHAR (50),
	prd_start_dt TIMESTAMP,
	prd_end_dt TIMESTAMP
);

-- Dropping if exists and Creating table for bronze_crm_sales_details
DROP TABLE IF EXISTS bronze_crm_sales_details;
CREATE TABLE bronze_crm_sales_details (
	sls_ord_num VARCHAR (50),
	sls_prd_key VARCHAR (50),
	sls_cust_id INT,
	sls_order_dt INT,
	sls_ship_dt INT,
	sls_due_dt INT,
	sls_sales INT,
	sls_quantity INT,
	sls_price INT
);

-- Dropping if exists and Creating bronze_erp_loc_a101
DROP TABLE IF EXISTS bronze_erp_loc_a101;
CREATE TABLE bronze_erp_loc_a101 (
	cid VARCHAR (50),
	cntry VARCHAR (50)
);

-- Dropping if exists and Creating bronze_erp_cust_az12 (
DROP TABLE IF EXISTS bronze_erp_cust_az12;
CREATE TABLE bronze_erp_cust_az12 (
	cid VARCHAR (50),
	bdate DATE,
	gen VARCHAR (50)
);

-- Dropping if exists and Creating table bronze_erp_cat_g1v2
DROP TABLE IF EXISTS bronze_erp_cat_g1v2;
CREATE TABLE bronze_erp_cat_g1v2 (
id VARCHAR (50),
cat VARCHAR (50),
subcat VARCHAR (50),
maintenance VARCHAR (50)
);


-- Creating store procedure for re-useability
CREATE OR REPLACE PROCEDURE bronze_load ()
language plpgsql
AS $$
-- Determing time taking to copy each file, display error if any and count rows in each file.
DECLARE
	start_time  TIMESTAMP; -- time when the upload starts
	end_time  TIMESTAMP; -- time when the upload ends
	duration  INTERVAL; -- difference btween end_time and start_time
	row_count  BIGINT; -- count the total rows in each file

BEGIN 
	

	BEGIN
			start_time := clock_timestamp();
		-- Bulk loading of the CSV file from the source
		-- Truncate and copy csv file into table bronze_crm_cust_info
		TRUNCATE TABLE bronze_crm_cust_info; 
		COPY bronze_crm_cust_info
		FROM 'C:\Program Files\PostgreSQL\16\cust_info.csv'
		DELIMITER ','
		CSV HEADER;
			end_time := clock_timestamp();
			duration := end_time - start_time;
      
		RAISE NOTICE 'Load Time: % ms', -- display the loading time in millisecond
			EXTRACT(MILLISECOND FROM duration) + EXTRACT(SECOND FROM duration)* 1000;
			
		-- count the total rows from bronze_crm_cust_info
		SELECT COUNT(*) INTO row_count FROM bronze_crm_cust_info;
		RAISE NOTICE 'total no of rows in bronze_crm_cust_info: %', row_count;
			
	EXCEPTION -- display error message if any error
		WHEN OTHERS THEN
		RAISE NOTICE 'no of errors during upload: %', SQLERRM;
	END;


	BEGIN 
			start_time := clock_timestamp();	
		-- Truncate and copy csv file into table bronze_crm_prd_info
		TRUNCATE TABLE bronze_crm_prd_info;
		COPY bronze_crm_prd_info
		FROM 'C:\Program Files\PostgreSQL\16\prd_info.csv'
		DELIMITER ','
		CSV HEADER;
 		end_time := clock_timestamp();
		duration := end_time - start_time;
		
		RAISE NOTICE 'Load Time: % ms', -- display the loading time in millisecond
			EXTRACT(MILLISECOND FROM duration) + EXTRACT(SECOND FROM duration)* 1000;
			
		-- count the total rows from bronze_crm_prd_info
		SELECT COUNT(*) INTO row_count FROM bronze_crm_prd_info;
		RAISE NOTICE 'total no of rows in bronze_crm_prd_info: %', row_count;
			
	EXCEPTION -- display error message if any error
		WHEN OTHERS THEN
		RAISE NOTICE 'no of errors during upload: %', SQLERRM;
	
	END;

	BEGIN
			start_time := clock_timestamp();
		-- Truncate and copy csv file into table bronze_crm_sales_detail
		TRUNCATE TABLE bronze_crm_sales_details;
		COPY bronze_crm_sales_details
		FROM 'C:\Program Files\PostgreSQL\16\sales_details.csv'
		DELIMITER ','
		CSV HEADER;
		end_time := clock_timestamp();
		duration := end_time - start_time;
		
		RAISE NOTICE 'Load Time: % ms', -- display the loading time in millisecond
			EXTRACT(MILLISECOND FROM duration) + EXTRACT(SECOND FROM duration)* 1000;
			
		-- count the total rows from bronze_crm_sales_details
		SELECT COUNT(*) INTO row_count FROM bronze_crm_sales_details;
		RAISE NOTICE 'total no of rows in bronze_crm_sales_details: %', row_count;
	
	EXCEPTION -- display error message if any error
		WHEN OTHERS THEN
		RAISE NOTICE 'no of errors during upload: %', SQLERRM;
	END;


	BEGIN 
			start_time := clock_timestamp();
	-- Truncate and copy csv file into table bronze_erp_loc_a101
		TRUNCATE TABLE bronze_erp_loc_a101;
		COPY bronze_erp_loc_a101
		FROM 'C:\Program Files\PostgreSQL\16\LOC_A101.csv'
		DELIMITER ','
		CSV HEADER;
		end_time := clock_timestamp();
		duration := end_time - start_time;
		
		RAISE NOTICE 'Load Time: % ms', -- display the loading time in millisecond
			EXTRACT(MILLISECOND FROM duration) + EXTRACT(SECOND FROM duration)* 1000;
			
		-- count the total rows from bronze_erp_loc_a101
		SELECT COUNT(*) INTO row_count FROM bronze_erp_loc_a101;
		RAISE NOTICE 'total no of rows in bronze_erp_loc_a101: %', row_count;
	EXCEPTION -- display error message if any error
		WHEN OTHERS THEN
		RAISE NOTICE 'no of errors during upload: %', SQLERRM;
	END;


BEGIN
		start_time := clock_timestamp();
-- Truncate and copy csv file into table bronze_erp_cust_az12 
	TRUNCATE TABLE bronze_erp_cust_az12;
	COPY bronze_erp_cust_az12
	FROM 'C:\Program Files\PostgreSQL\16\CUST_AZ12.csv'
	DELIMITER ','
	CSV HEADER;
		end_time := clock_timestamp();
		duration := end_time - start_time;
		
		RAISE NOTICE 'Load Time: % ms', -- display the loading time in millisecond
			EXTRACT(MILLISECOND FROM duration) + EXTRACT(SECOND FROM duration)* 1000;
	
		-- count the total rows from bronze_erp_cust_az12
		SELECT COUNT(*) INTO row_count FROM bronze_erp_cust_az12;
		RAISE NOTICE 'total no of rows in bronze_erp_cust_az12: %', row_count;
	EXCEPTION -- display error message if any error
		WHEN OTHERS THEN
		RAISE NOTICE 'no of errors during upload: %', SQLERRM;
		
	
	END;

 BEGIN 
			start_time := clock_timestamp();
		TRUNCATE TABLE bronze_erp_cat_g1v2;
		COPY bronze_erp_cat_g1v2
		FROM 'C:\Program Files\PostgreSQL\16\PX_CAT_G1V2.csv'
		DELIMITER ','
		CSV HEADER;
		end_time := clock_timestamp();
		duration := end_time - start_time;
		
	RAISE NOTICE 'Load Time: % ms', -- display the loading time in millisecond
		EXTRACT(MILLISECOND FROM duration) + EXTRACT(SECOND FROM duration)* 1000;

		-- count the total rows from bronze_erp_cat_g1v2
		SELECT COUNT(*) INTO row_count FROM bronze_erp_cat_g1v2;
		RAISE NOTICE 'total no of rows in bronze_erp_cat_g1v2: %', row_count;
	EXCEPTION -- display error message if any error
		WHEN OTHERS THEN
		RAISE NOTICE 'no of errors during upload: %', SQLERRM;

	END;

END;
$$;
