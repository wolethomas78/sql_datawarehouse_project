



CREATE VIEW gold_dim_customers AS
	SELECT
	ROW_NUMBER() OVER(ORDER BY cst_id) AS customer_key,
	ci.cst_id AS customer_id,
	ci.cst_key AS customer_number,
	ci.cst_firstname AS first_name,
	ci.cst_lastname AS last_name,
	lo.cntry AS country,
	ci.cst_marital_status AS marital_status,
	CASE 
		 WHEN cst_gndr <> 'n/a' THEN cst_gndr -- Choosing CRM data to determine our gender status--
	ELSE COALESCE(ca.gen,'n/a')            
END AS gender,
ca.bdate AS birthdate,
ci.cst_create_date AS create_date
FROM silver_crm_cust_info ci
LEFT JOIN silver_erp_cust_az12 ca
ON ci.cst_key = ca.cid
LEFT JOIN silver_erp_loc_a101 lo
ON ci.cst_key = lo.cid;


CREATE VIEW gold_dim_product AS
SELECT
ROW_NUMBER() OVER(ORDER BY prd_id) AS product_key,
pd.prd_id AS product_id,
pd.prd_key AS product_number,
pd.prd_nm AS product_name,
pd.cat_id AS category_id,
px.cat AS category,
px.subcat AS subcategory,
px.maintenance,
pd.prd_cost AS product_cost,
pd.prd_line AS product_line,
pd.prd_start_dt AS start_date
FROM silver_crm_prd_info pd
LEFT JOIN silver_erp_px_cat_g1v2 PX
ON pd.cat_id = px.id
WHERE pd.prd_end_dt IS NULL; -- Filter out all historical data--

CREATE VIEW gold_fact_sales AS
SELECT 
	sd.sls_ord_num AS order_number,
	dp.product_key,
	dc.customer_key,
	sd.sls_order_dt AS order_date,
	sd.sls_ship_dt AS shipping_date,
	sd.sls_due_dt AS due_date,
	sd.sls_sales AS sales,
	sd.sls_quantity AS quantity,
	sd.sls_price AS price
FROM silver_crm_sales_details sd
LEFT JOIN gold_dim_product dp
ON sd.sls_prd_key = dp.product_number
LEFT JOIN gold_dim_customers dc
ON sd.sls_cust_id = dc.customer_id;
